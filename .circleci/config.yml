version: 2.1

jobs:
  ios-e2e-tests:
    macos:
      xcode: "16.2.0"
    steps:
      - checkout
      
      - run:
          name: Show environment info
          command: |
            echo "Node version: $(node --version)"
            echo "NPM version: $(npm --version)"
            xcodebuild -version
            xcrun simctl list devices | grep -A 5 "iPhone"

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-

      - run:
          name: Install dependencies
          command: |
            npm install -g yarn
            yarn install --frozen-lockfile

      - save_cache:
          paths:
            - node_modules
            - ~/.cache/expo
          key: v1-dependencies-{{ checksum "package.json" }}

      - run:
          name: Install Maestro
          command: |
            curl -Ls "https://get.maestro.mobile.dev" | bash
            export PATH="$HOME/.maestro/bin:$PATH"
            echo 'export PATH="$HOME/.maestro/bin:$PATH"' >> $BASH_ENV

      - run:
          name: Prebuild iOS project
          command: |
            export POSTHOG_KEY=""
            export SENTRY_DSN=""
            export SENTRY_AUTH_TOKEN=""
            export API_MODE="mock"
            export API_URL="https://jsonplaceholder.typicode.com"
            export EAS_PROJECT_ID=""
            export SENTRY_DISABLE_AUTO_UPLOAD=true
            export SENTRY_ALLOW_FAILURE=true
            npx expo prebuild --platform ios --non-interactive

      - run:
          name: Install CocoaPods
          command: |
            cd ios
            pod install --repo-update
            cd ..

      - run:
          name: Build iOS app (Release)
          command: |
            cd ios
            echo "üöÄ Starting Xcode build (minimal logs)..."

            gem install xcpretty --no-document

            # Use stable simulator target
            DESTINATION="platform=iOS Simulator,name=iPhone 15,OS=17.5"

            # Clean and build with reduced logs
            set -o pipefail
            xcodebuild \
              -workspace *.xcworkspace \
              -scheme "gluestackuiboilerplate" \
              -configuration Release \
              -sdk iphonesimulator \
              -destination "$DESTINATION" \
              -derivedDataPath build \
              clean build \
              | xcpretty --color --simple --report junit --output ../xcodebuild-results.xml

            # Save raw logs for debugging (minimal second build omitted to save time)
            echo "‚úÖ Build finished ‚Äî saving raw log"
            cp ../xcodebuild-results.xml ../xcodebuild.log || true

      - run:
          name: Save build logs
          command: |
            cp ios/xcodebuild.log ./
            echo "‚úÖ Build log saved for artifacts"

      - run:
          name: Install app on simulator
          command: |
            cd ios
            APP_PATH=$(find build -name "*.app" -type d | head -1)
            if [ -z "$APP_PATH" ]; then
              echo "‚ùå No .app file found"
              find build -name "*.app" -type d
              exit 1
            fi
            echo "‚úÖ Found app: $APP_PATH"
            xcrun simctl boot "iPhone 15"
            xcrun simctl install "iPhone 15" "$APP_PATH"

      - run:
          name: Run Maestro tests
          command: |
            export PATH="$HOME/.maestro/bin:$PATH"
            maestro test .maestro/ --format junit --output results.xml
          environment:
            MAESTRO_APP_ID: com.zeeshantechdots.myapp
            MAESTRO_DRIVER_STARTUP_TIMEOUT: 120000

      - store_test_results:
          path: xcodebuild-results.xml

      - store_test_results:
          path: results.xml  # Maestro test results

      - store_artifacts:
          path: xcodebuild.log
          destination: build-logs

      - store_artifacts:
          path: xcodebuild-results.xml
          destination: xcode-test-results

      - store_artifacts:
          path: results.xml
          destination: maestro-test-results

      - store_artifacts:
          path: ios/build
          destination: ios-build-output

workflows:
  version: 2
  test:
    jobs:
      - ios-e2e-tests
