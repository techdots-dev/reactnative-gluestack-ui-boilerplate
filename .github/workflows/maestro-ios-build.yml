name: Maestro E2E Tests iOS (Local Build)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  ios-e2e-tests:
    name: Run iOS E2E Tests
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.18.1'
        cache: 'yarn'

    - name: Install dependencies
      run: |
        yarn install

    - name: Install Maestro
      run: |
        curl -Ls "https://get.maestro.mobile.dev" | bash
        echo "$HOME/.maestro/bin" >> $GITHUB_PATH

    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.1'
        bundler-cache: true

    - name: Install CocoaPods
      run: |
        gem install cocoapods

    - name: Boot iOS Simulator
      run: |
        # Boot a specific available simulator
        xcrun simctl boot "iPhone 16 Pro Max"
        xcrun simctl list devices booted

    - name: Prebuild Expo iOS Project
      run: |
        export POSTHOG_KEY=""
        export SENTRY_DSN=""
        export SENTRY_AUTH_TOKEN=""
        export API_MODE="mock"
        export API_URL="https://jsonplaceholder.typicode.com"
        export EAS_PROJECT_ID=""
        export SENTRY_DISABLE_AUTO_UPLOAD=true
        npx expo prebuild --platform ios --clean

    - name: Install Pods
      run: |
        cd ios
        pod install
        cd ..

    - name: Start Metro
      run: |
        # Kill any existing Metro processes and start fresh
        echo "Starting Metro bundler..."
        pkill -f "expo start" || true
        lsof -ti:8081 | xargs kill -9 || true
        
        # Start Metro in background
        npx expo start --no-dev --minify > metro.log 2>&1 &
        METRO_PID=$!
        
        # Wait for Metro to fully start
        echo "Waiting for Metro to start..."
        sleep 45
        
        # Verify Metro is running
        if curl -f http://localhost:8081 > /dev/null 2>&1; then
            echo "‚úÖ Metro is running successfully"
        else
            echo "‚ùå Metro failed to start. Logs:"
            cat metro.log
            exit 1
        fi

    - name: Build iOS App (Debug)
      run: |
        cd ios
        xcodebuild \
          -workspace gluestackuiboilerplate.xcworkspace \
          -scheme gluestackuiboilerplate \
          -configuration Debug \
          -sdk iphonesimulator \
          -destination 'platform=iOS Simulator,name=iPhone 16 Pro Max,OS=latest' \
          -derivedDataPath build

          # Keep Metro running for Maestro tests
          echo "Metro PID: $METRO_PID"

    - name: Install App on Simulator
      run: |
        cd ios
        APP_PATH=$(find build/Build/Products/Debug-iphonesimulator -name "*.app" | head -n 1)
        if [ -z "$APP_PATH" ]; then
           echo "‚ùå No .app found under build/Build/Products/Debug-iphonesimulator"
           ls -R build/Build/Products || true
           exit 1
        fi
        echo "‚úÖ Installing $APP_PATH"
        xcrun simctl install booted "$APP_PATH"

    - name: Launch and Verify App
      run: |
        # Launch app
        xcrun simctl launch booted com.zeeshantechdots.myapp
        echo "üöÄ App launched"

        sleep 20

        # Verify app is running
          if xcrun simctl list apps booted | grep -q "com.zeeshantechdots.myapp"; then
              echo "‚úÖ App is running"
          else
              echo "‚ùå App is not running"
              exit 1
          fi
          
          # Take screenshot for debugging
          xcrun simctl io booted screenshot /tmp/app-home.png
          echo "üì∏ Screenshot saved"

    - name: Run Maestro iOS Tests
      run: |
        # Run tests with Metro still running in background
        maestro test .maestro/ --format junit --output ios-results.xml
      env:
        MAESTRO_APP_ID: com.zeeshantechdots.myapp

    - name: Stop Metro Bundler
      run: |
        # Clean up Metro process
        pkill -f "expo start" || true
        lsof -ti:8081 | xargs kill -9 || true

    - name: Upload iOS Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ios-test-results
        path: |
          ios-results.xml
          .maestro/**/*.png